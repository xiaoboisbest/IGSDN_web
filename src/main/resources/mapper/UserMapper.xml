<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.igsdn.dao.UserMapper">
    <resultMap id="BaseResultMap" type="cn.igsdn.domain.User">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="gen_user_level" jdbcType="SMALLINT" property="genUserLevel"/>
        <result column="admin_user_level" jdbcType="SMALLINT" property="adminUserLevel"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="VARCHAR" property="age"/>
        <result column="gender" jdbcType="BIT" property="gender"/>
        <result column="uname" jdbcType="VARCHAR" property="uname"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, password, gen_user_level, admin_user_level, tel, email, name, age, gender, uname
  </sql>
    <sql id="Gen_User_DTO_Column_List">
    ID, gen_user_level, uname
  </sql>
    <select id="selectGenUserDTOByPrimaryKey" resultType="cn.igsdn.dto.GenUserDTO">
        select
        <include refid="Gen_User_DTO_Column_List"/>
        from ig_user
        where password = #{arg1} and (tel = #{arg0} or email = #{arg0}) AND admin_user_level = '0'
    </select>
    <select id="selectByLoginName" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*)
    from ig_user
    where tel = #{arg0} or email = #{arg0}
  </select>
    <select id="selectByExample" parameterType="cn.igsdn.domain.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ig_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ig_user
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ig_user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.igsdn.domain.UserExample">
        delete from ig_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.igsdn.domain.User">
    insert into ig_user (ID, password, gen_user_level, 
      admin_user_level, tel, email, 
      name, age, gender,uname)
    values (#{id,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{genUserLevel,jdbcType=SMALLINT}, 
      #{adminUserLevel,jdbcType=SMALLINT}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{gender,jdbcType=BIT},#{uname,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.igsdn.domain.User">
        insert into ig_user
        <trim prefix=" (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="genUserLevel != null">
                genUserLevel,
            </if>
            <if test="adminUserLevel != null">
                adminUserLevel,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="uname != null">
                uname
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="genUserLevel != null">
                #{genUserLevel,jdbcType=SMALLINT},
            </if>
            <if test="adminUserLevel != null">
                #{adminUserLevel,jdbcType=SMALLINT},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=BIT},
            </if>
            <if test="uname != null">
                #{uname,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.igsdn.domain.UserExample" resultType="java.lang.Long">
        select count(*) from ig_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ig_user
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.genUserLevel != null">
                gen_user_level = #{record.genUserLevel,jdbcType=SMALLINT},
            </if>
            <if test="record.adminUserLevel != null">
                admin_user_level = #{record.adminUserLevel,jdbcType=SMALLINT},
            </if>
            <if test="record.tel != null">
                tel = #{record.tel,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ig_user
        set ID = #{record.id,jdbcType=INTEGER},
        password = #{record.password,jdbcType=VARCHAR},
        gen_user_level = #{record.genUserLevel,jdbcType=SMALLINT},
        admin_user_level = #{record.adminUserLevel,jdbcType=SMALLINT},
        tel = #{record.tel,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.igsdn.domain.User">
        update ig_user
        <set>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="genUserLevel != null">
                gen_user_level = #{genUserLevel,jdbcType=SMALLINT},
            </if>
            <if test="adminUserLevel != null">
                admin_user_level = #{adminUserLevel,jdbcType=SMALLINT},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=BIT},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.igsdn.domain.User">
    update ig_user
    set password = #{password,jdbcType=VARCHAR},
      gen_user_level = #{genUserLevel,jdbcType=SMALLINT},
      admin_user_level = #{adminUserLevel,jdbcType=SMALLINT},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>